version: "3"

services:
  traefik:
    image: traefik:2.5.1
    container_name: traefik_proxy
    restart: always
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
    #- --log.level=DEBUG
    #- --api.debug=true # Enabling additional endpoints for debugging and profiling
    - --api=true
    # - --certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    - --providers.docker=true # Enabling docker as the provider for traefik
    - --providers.docker.exposedbydefault=false # Don't expose every container to traefik, only expose enabled ones
    - --providers.file
    - --providers.file.filename=/config.yaml # <== Referring to a dynamic configuration file
    - --entrypoints.web.address=:80 # Defining an entrypoint for port :80 named web
    - --entrypoints.websecure.address=:443 # Defining an entrypoint for https on port :443 named web-secured
    - --certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web
    - --certificatesresolvers.myhttpchallenge.acme.email=contact@innque.com

#    labels:
#    - traefik.enable=true # Enable traefik on itself to view dashboard and assign subdomain to view it
#    - traefik.http.routers.traefik.rule=Host("proxy.innque.com") # Setting the domain for the dashboard
#    - traefik.http.routers.traefik.service=api@internal # Enabling the api to be a service to access
#    - traefik.http.routers.api.middlewares=auth
#    - traefik.frontend.auth.basic:username:passwordMD5
#    - traefik.http.middlewares.auth.basicauth.users=admin:proxY4$$

    ports:
    - 80:80
    - 443:443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock # Volume for docker api
    - ./config.yaml:/config.yaml # Volume for dynamic conf file


networks:
  default:
    external:
      name: server_network
